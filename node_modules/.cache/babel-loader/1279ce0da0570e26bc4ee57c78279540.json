{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jacksonchen/Desktop/test-deploy/django-react-testdeploy/my-app/src/components/Album.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { List, Tabs } from 'antd';\nimport { Line } from \"react-chartjs-2\";\nconst {\n  TabPane\n} = Tabs;\n\nconst Artist = props => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    const albumScores = [];\n    const albumNames = [];\n\n    for (const dataObj of props.data) {\n      albumScores.push(dataObj.sentimentVal);\n      albumNames.push(dataObj.name);\n    }\n\n    setChartData({\n      labels: albumNames,\n      datasets: [{\n        label: \"Sentiment\",\n        data: albumScores,\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 4,\n        fill: false,\n        borderColor: \"#ADD8E6\"\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart;\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.artist_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"albums\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Albums\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          itemLayout: \"vertical\",\n          size: \"large\",\n          pagination: {\n            pageSize: 5\n          },\n          dataSource: props.data,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            actions: [],\n            extra: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: 272,\n              alt: \"logo\",\n              src: item.picture\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n              title: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/artist/${item.id}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 44\n              }, this),\n              description: item.sentimentVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), item.content]\n          }, item.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, \"albums\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"Graph of sentiment over albums\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            responsive: true,\n            title: {\n              text: \"Sentiment over Albums\",\n              display: true\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  autoSkip: true,\n                  maxTicksLimit: 10,\n                  beginAtZero: true\n                },\n                gridLines: {\n                  display: true\n                }\n              }],\n              xAxes: [{\n                gridLines: {\n                  display: true\n                }\n              }]\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, \"graph\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Artist, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n\n_c = Artist;\nexport default Artist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Artist\");","map":{"version":3,"sources":["/Users/jacksonchen/Desktop/test-deploy/django-react-testdeploy/my-app/src/components/Album.js"],"names":["React","useEffect","useState","List","Tabs","Line","TabPane","Artist","props","chartData","setChartData","chart","albumScores","albumNames","dataObj","data","push","sentimentVal","name","labels","datasets","label","backgroundColor","borderWidth","fill","borderColor","artist_name","pageSize","item","picture","id","content","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { List, Tabs } from 'antd';\nimport { Line } from \"react-chartjs-2\"\n\nconst { TabPane } = Tabs;\n\nconst Artist = (props) => {\n    const [chartData, setChartData] = useState({});\n    const chart = () => {\n        const albumScores = [];\n        const albumNames = [];\n        for (const dataObj of props.data) {\n            albumScores.push(dataObj.sentimentVal);\n            albumNames.push(dataObj.name);\n        }\n        setChartData({\n            labels: albumNames,\n            datasets: [\n                {\n                    label: \"Sentiment\",\n                    data: albumScores,\n                    backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n                    borderWidth: 4,\n                    fill: false,\n                    borderColor: \"#ADD8E6\"\n                }\n            ]\n        });\n    };\n\n    useEffect(() => {\n        chart;\n    }, [props]);\n\n    return (\n        <div>\n            <br></br>\n            <h2>{props.artist_name}</h2>\n        <Tabs defaultActiveKey=\"albums\" >\n                <TabPane tab=\"Albums\" key=\"albums\">\n                    <List\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                            pageSize: 5,\n                        }}\n                        dataSource={props.data}\n                        renderItem={item => (\n                            <List.Item\n                                key={item.name}\n                                actions={[]}\n                                extra={\n                                    <img\n                                        width={272}\n                                        alt=\"logo\"\n                                        src={item.picture}\n                                    />\n                                }\n                            >\n                                <List.Item.Meta\n                                    title={<a href={`/artist/${item.id}`}>{item.name}</a>}\n                                    description={item.sentimentVal}\n                                />\n                                {item.content}\n                            </List.Item>\n                        )}\n                    />\n                </TabPane>\n                <TabPane tab=\"Graph of sentiment over albums\" key=\"graph\">\n                    <Line\n                        data={chartData}\n                        options={{\n                            responsive: true,\n                            title: { text: \"Sentiment over Albums\", display: true },\n                            scales: {\n                                yAxes: [\n                                    {\n                                        ticks: {\n                                            autoSkip: true,\n                                            maxTicksLimit: 10,\n                                            beginAtZero: true\n                                        },\n                                        gridLines: {\n                                            display: true\n                                        }\n                                    }\n                                ],\n                                xAxes: [\n                                    {\n                                        gridLines: {\n                                            display: true\n                                        }\n                                    }\n                                ]\n                            }\n                        }}\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n}\n\nexport default Artist;"]},"metadata":{},"sourceType":"module"}