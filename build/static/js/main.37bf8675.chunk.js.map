{"version":3,"sources":["components/Artist.js","containers/ArtistListView.js","components/Album.js","containers/ArtistDetailView.js","components/Song.js","containers/SongView.js","containers/SongDetailView.js","routes.js","components/Layout.js","containers/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Artist","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","actions","extra","width","alt","src","picture","Meta","title","href","id","name","description","content","ArtistList","state","artists","axios","get","then","res","setState","this","React","Component","useState","chartData","setChartData","useEffect","albumScores","albumNames","dataObj","push","sentimentVal","labels","datasets","label","backgroundColor","borderWidth","chart","options","responsive","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","ArtistDetail","artist","match","params","artistID","Album","Song","sentiment","SongDetail","songs","albumID","SongDetailView","song","songID","lyrics","BaseRouter","exact","path","component","Header","Layout","Content","Footer","CustomLayout","className","theme","mode","defaultSelectedKeys","style","padding","margin","children","textAlign","Search","Input","SearchBar","value","catch","error","response","post","status","placeholder","onSearch","enterButton","length","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37bf8675.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Space } from 'antd';\n\n\nconst Artist = (props) => {\n    return (\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n                onChange: page => {\n                    console.log(page);\n                },\n                pageSize: 3,\n            }}\n            dataSource={props.data}\n            // footer={ }\n            renderItem={item => (\n                <List.Item\n                    key={item.name}\n                    actions={[]}\n                    extra={\n                        <img\n                            width={272}\n                            alt=\"logo\"\n                            src={item.picture}\n                        />\n                    }\n                >\n                    <List.Item.Meta\n                        // avatar={<Avatar src={item.avatar} />}\n                        title={<a href={`/${item.id}`}>{item.name}</a>}\n                        description={item.description}\n                    />\n                    {item.content}\n                </List.Item>\n            )}\n        />\n    )\n}\n\nexport default Artist;","import React from 'react';\nimport axios from 'axios';\n\nimport Artist from '../components/Artist';\n\nclass ArtistList extends React.Component {\n    state = {\n        artists: []\n    }\n\n    componentDidMount() {\n        axios.get(\"http://drt-boilerplate18.herokuapp.com/api/\")\n            .then(res => {\n                this.setState({\n                    artists: res.data\n                });\n                console.log(res.data)\n            })\n    }\n\n    render() {\n        return (\n            <Artist data={this.state.artists} />\n        )\n    }\n\n}\n\nexport default ArtistList;","import React, {useEffect, useState} from 'react';\nimport { List, Avatar, Space } from 'antd';\nimport { Line } from \"react-chartjs-2\"\n\nconst Artist = (props) => {\n    const [chartData, setChartData] = useState({});\n    console.log(props);\n    const chart = () => {\n        const albumScores = [];\n        const albumNames = [];\n        for (const dataObj of props.data) {\n            albumScores.push(dataObj.sentimentVal);\n            console.log(dataObj.sentimentVal);\n            albumNames.push(dataObj.name);\n            console.log(dataObj.name);\n        }\n        setChartData({\n            labels: albumNames,\n            datasets: [\n                {\n                    label: \"Sentiment over Albums\",\n                    data: albumScores,\n                    backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n                    borderWidth: 4\n                }\n            ]\n        });\n        console.log(chartData);\n        console.log(albumNames, albumScores);\n    };\n\n    useEffect(() => {\n        console.log(\"useEffect called\")\n        console.log(props);\n        chart();\n    }, [props]);\n\n    return (\n        <div>\n        <Line\n            data={chartData}\n            options={{\n                responsive: true,\n                title: { text: \"Sentiment\", display: true },\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                autoSkip: true,\n                                maxTicksLimit: 10,\n                                beginAtZero: true\n                            },\n                            gridLines: {\n                                display: true\n                            }\n                        }\n                    ],\n                    xAxes: [\n                        {\n                            gridLines: {\n                                display: true\n                            }\n                        }\n                    ]\n                }\n            }}\n        />\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n                onChange: page => {\n                    console.log(page);\n                },\n                pageSize: 3,\n            }}\n            dataSource={props.data}\n            // footer={ }\n            renderItem={item => (\n                <List.Item\n                    key={item.name}\n                    actions={[]}\n                    extra={\n                        <img\n                            width={272}\n                            alt=\"logo\"\n                            src={item.picture}\n                        />\n                    }\n                >\n                    <List.Item.Meta\n                        // avatar={<Avatar src={item.avatar} />}\n                        title={<a href={`/artist/${item.id}`}>{item.name}</a>}\n                        description={item.sentimentVal}\n                    />\n                    {item.content}\n                </List.Item>\n            )}\n        />\n        </div>\n    )\n}\n\nexport default Artist;","import React from 'react';\nimport axios from 'axios';\n\nimport Album from '../components/Album';\n\nclass ArtistDetail extends React.Component {\n    state = {\n        artist: [],\n        id: this.props.match.params.artistID\n    }\n\n    componentDidMount() {\n        const artistID = this.props.match.params.artistID;\n        axios.get(`http://drt-boilerplate18.herokuapp.com/api/album/?artist=${artistID}`)\n            .then(res => {\n                this.setState({\n                    artist: res.data\n                });\n                console.log(res.data)\n            })\n    }\n\n    componentDidUpdate() {\n        if (this.state.id !== this.props.match.params.artistID) {\n            const artistID = this.props.match.params.artistID;\n            axios.get(`http://drt-boilerplate18.herokuapp.com/api/album/?artist=${artistID}`)\n                .then(res => {\n                    this.setState({\n                        artist: res.data,\n                        id: this.props.match.params.artistID\n                    });\n                    console.log(res.data)\n                })\n        }\n    }\n\n    render() {\n        return (\n            <Album data={this.state.artist} />\n        )\n    }\n}\n\nexport default ArtistDetail;","import React from 'react';\nimport { List, Avatar } from 'antd';\n\nconst Song = (props) => {\n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={props.data}\n            renderItem={item => (\n                <List.Item>\n                    <List.Item.Meta\n                        // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                        title={<a href={`/album/${item.id}`}>{item.title}</a>} // make this a link to the lyrics\n                        description={item.sentiment}\n                    />\n                </List.Item>\n            )}\n        />\n    )\n}\n\nexport default Song;","import React from 'react';\nimport axios from 'axios';\n\nimport Song from '../components/Song';\n\nclass SongDetail extends React.Component {\n    state = {\n        songs: []\n    }\n\n    componentDidMount() {\n        const albumID = this.props.match.params.albumID;\n        axios.get(`http://drt-boilerplate18.herokuapp.com/api/song/?album=${albumID}`)\n            .then(res => {\n                this.setState({\n                    songs: res.data\n                });\n                console.log(res.data)\n            })\n    }\n\n    render() {\n        return (\n            <Song data={this.state.songs} />\n        )\n    }\n}\n\nexport default SongDetail;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\n\nclass SongDetailView extends React.Component {\n    state = {\n        song: {}\n    }\n\n    componentDidMount() {\n        const songID = this.props.match.params.songID;\n        axios.get(`http:/drt-boilerplate18.herokuapp.com/api/song/${songID}`)\n            .then(res => {\n                this.setState({\n                    song: res.data\n                });\n                console.log(res.data)\n            })\n    }\n\n    render() {\n        return (\n            <Card title={this.state.song.title}>\n                <p>Lyrics: {this.state.song.lyrics}</p>\n                <p>Sentiment Value: {this.state.song.sentimentVal}</p>\n                <p>Sentiment: {this.state.song.sentiment}</p>\n            </Card>\n        )\n    }\n}\n\nexport default SongDetailView;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport ArtistList from './containers/ArtistListView';\nimport ArtistDetail from './containers/ArtistDetailView';\nimport SongDetail from './containers/SongView';\nimport SongDetailView from './containers/SongDetailView';\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArtistList} />\n        <Route exact path='/:artistID' component={ArtistDetail} />\n        <Route exact path='/artist/:albumID' component={SongDetail} />\n        <Route exact path='/album/:songID' component={SongDetailView} />\n    </div>\n);\n\nexport default BaseRouter;","import { Layout, Menu, Breadcrumb } from 'antd';\nimport React from 'react';\n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n        <Layout className=\"layout\">\n            <Header>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\">Lyrics Sentiment</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    {/* <Breadcrumb.Item>Home</Breadcrumb.Item> */}\n                    {/* <Breadcrumb.Item>List</Breadcrumb.Item> */}\n                    {/* <Breadcrumb.Item>Lyric sentiment</Breadcrumb.Item> */}\n                </Breadcrumb>\n                <div className=\"site-layout-content\">\n                    {props.children}\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}></Footer>\n        </Layout>\n    );\n}\n\nexport default CustomLayout;","import { Input } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nclass SearchBar extends React.Component {\n    state = {\n        artists: []\n    }\n\n    onSearch(value) {\n        axios.get(`http://drt-boilerplate18.herokuapp.com/api/${value}`)\n            .then(res => {\n                this.setState({\n                    artists: [res.data]\n                });\n            })\n            .catch(error => {\n                console.log(error.response)\n                axios.post(\"http://drt-boilerplate18.herokuapp.com/api/\", {\n                    name: value\n                })\n                    .then(res => {\n                        this.setState({\n                            artists: [res.data]\n                        });\n                        console.log(res.data)\n                    })\n                    .catch(error => {\n                        if (error.response.status === 500) {\n                            console.log(\"Can't find artist; doesn't exist\")\n                        }\n                    })\n            });\n\n    };\n\n    render() {\n        return (\n            <div>\n                <Search\n                    placeholder=\"Search for an Artist\"\n                    // allowClear\n                    onSearch={(value) => this.onSearch(value)}\n                    enterButton\n                />\n                {this.state.artists.length > 0 &&\n                    <Redirect push to={`/${this.state.artists[0].id}`} />\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default SearchBar;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\n\n\nimport CustomLayout from './components/Layout';\nimport SearchBar from './containers/SearchBar';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <CustomLayout>\n          <SearchBar />\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}